整体C语言学习框架
1.数据结构和运算符以及C语言控制语句
2.数组与函数
3.指针结构体链表							时间：20220223-20220227	//题目练习
4.经典练习题库


3.指针结构体链表
	（1）指针
		a)指针的概述
			指针是一种地址类型
			32位下：指针的大小为4字节
			64位下：指针的大小为8字节
			8位下：指针的大小为3字节
			指针变量主要用于存储数据的地址，通过地址去访问保存在地址中的值。
			指针类型的大小和它指向空间的大小没有任何关系，指针保存的是地址数据，大小空间保存的是数值数据的数据范围。
		b)指针符号
			&：取地址符，取出指针数据的地址
			*：取内容符，取出指针指向地址的内容
		c)指针变量
			指针变量的定义：数据类型 *变量名   //int *p;
			-数据类型：规定了指针可以指向什么样子的数据类型
			-*：指针的标志，仅仅是为了渠区分普通变量和指针变量的
			-变量名：跟标识符命名规则相同

			指针变量的初始化：避免野指针，指针变量都要进行初始化操作（赋值为NULL）

			指针变量的应用：
			-指向变量的指针（普通指针）：
				指针变量和普通变量的关系：
				--指针变量是用来指向（保存）普通变量的地址
				--可以通过指针变量来操作普通变量空间的值
				--指针变量的地址是变量，普通变量的地址是常量
				--一个指针变量可以指向不同的普通变量（同一时间只能指向一个），一个普通变量可以被多个指针变量同时指向
			-指向数组的指针：
				指针和数组一样，都可以通过下标来访问数组中的每一个元素。
				指针变量+1，指针内存的地址+n(n由指针指向的空间类型决定)。
				当指针配合下标使用的时候，当做数组的形式来使用（不需要用*去取内容），当操作的是指针地址的时候，当做指针的形式来使用（需要用*去取内容）。
				指针的运算只能使用+、-、++、--，不能使用*、/、%。
				访问数组中当前元素的下一个元素的地址：+，++
				访问数组中当前元素的前一个元素的地址：-，--
				优先级排序：++ --  > * > + -

		d)二级指针
			二级指针：又称为指向指针的指针（一般用于指针数组来使用）。
			定义格式：指针类型 **变量名（int **p）
			二级指针与普通指针与普通变量之间的关系：
				二级指针变量保存的是该指针指向的指针的地址（二级指针的地址就是指向的指针地址）
				*二级指针变量（即取一次二级指针的值），是指针变量指向普通变量的地址。
				**二级指针变量（即取两次二级指针的值），即取指针变量指向的普通变量的值。

		e)指针数组和数组指针
			指针数组：本质是一个数组（指针类型的数组），数组中的每一个元素的类型都是指针类型，使用的时候结合数组和指针的规则使用。
			数组指针：本质是一个指针（数组类型的指针），数组指针用于访问二维数组的时候使用。
			定义方式：数据类型 （* 变量名）[数组长度] （例如：int （* num）[4]）
				数据类型：规定了数组指针指向的数组的类型
				数组长度：规定了数组指针指向的数组的长度（二维数组的列长度）
				例子：
				#include <stdio.h> 
				int main() 
				{ 
				  int num[2][3] = {1,2,3,4,5,6}; 
				  int (*pnum)[3] = NULL; 
				   
				  pnum = num; 
				   
				  /*  第 0 行第 0 列数据  */ 
				  printf("num[0][0] = %d\n",(*pnum)[0]); 
				  /*  第 1 行第 1 列数据  */ 
				  printf("num[1][1] = %d\n",(*(pnum + 1))[1]); 
				}
		f)指针函数和函数指针
			*指针函数：本质是一个函数（函数的类型是指针类型），函数的返回值是一个指针（返回值是一个地址数据），用法和函数一样，
			常用于返回一个数组或者指针变量的地址。
			指针函数地址的返回只能返回静态普通变量的地址，动态开辟的地址，全局变量的地址以及指针变量的地址，不能返回普通局部变量的地址。
			（普通局部变量的作用域只在函数内部有效，函数运行结束后就会释放普通局部变量的地址，所以不能返回普通局部变量）
			*函数指针：函数指针的本质是指针，指针指向的类型是一个函数类型。使用方法和指针一样。
			定义：函数类型 （*函数名）（形式参数）    例如：int （*p）[int，int]
				函数类型：规定了函数指针指向的函数的函数类型，（指向的函数的返回值和函数指针的函数类型相同）
				形式参数：规定了函数指针指向的函数的函数类型以及个数（指定的函数的形参的数据类型以及形参的个数，必须和函数指针定义的类型和个数一样）

		g)空类型指针和指针四要素
			空类型指针：是指可以执行任何数据类型元素的指针。在使用空类型指针的时候，必须要吧空类型指针强制转换成指向元素的数据类型
			指针四要素：
				指针必须要有类型，指针类型规定执行特定类型的指针。
				指针所指向的数据类型决定了指针值的数据类型
				在使用指针的时候，指针必须要有指向，避免野指针的出现（指向不定的指针）
				指针本身也占用存储空间（指针本身也是一个变量）
		h)指针的应用场合
			1）当函数需要传一个数组的时候，可以用指针来实现（指针作为函数的形参来代替数组作为函数的形参）
			2）当函数需要返回一个地址的时候，需要用指针来实现（指针函数）
			3）当函数需要改变实参的时候，需要用指针来实现
			
	（2）结构体
	（3）链表
	练习题集合：
	指针：
		示例讲解题：
		示例1：指针占用的地址大小
		可以通过sizeof(指针类型 *)去计算
		例如：
			sizeof(char	*)	//计算数据类型位char 型的指针变量占用的内存空间
			sizeof(int *)	//计算数据类型为int 型的指针变量占用的内存空间
			结果：在存储空间一样的计算机下，占用内存是一样的
		1、编写一个子函数，函数实现的功能是将两个数组中的所有值相加，然返回最终的结果。
		2、编写一个子函数，函数功能是将两个数组中的对应位的值相加，然后保存到第 3 个数组中。
		3、写一个函数实现在一个字符串中查找键盘上输入的字符，并且返回这个字符的地址。
		4、写一个函数对数组内的内容进行排序。提示：冒泡法排序。
		5、写一个函数实现把输入的两个字符串连接成一个字符串，并且返回连接好的字符串的首地址。
		6、编写一个子函数实现在键盘上输入两个字符串，比较输入的字符串是否一样。
		7、编写一个子函数实现在键盘上输入一个字符串，检测输入的字符串是否为回文。
	结构体：
	链表：










